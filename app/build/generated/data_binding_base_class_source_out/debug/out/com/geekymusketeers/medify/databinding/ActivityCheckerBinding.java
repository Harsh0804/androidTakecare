// Generated by view binder compiler. Do not edit!
package com.geekymusketeers.medify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geekymusketeers.medify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCheckerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button disease;

  @NonNull
  public final Spinner syp1;

  @NonNull
  public final Spinner syp2;

  @NonNull
  public final Spinner syp3;

  @NonNull
  public final Spinner syp4;

  @NonNull
  public final Spinner syp5;

  @NonNull
  public final Spinner syp6;

  @NonNull
  public final Spinner syp7;

  @NonNull
  public final TextView textView4;

  private ActivityCheckerBinding(@NonNull ConstraintLayout rootView, @NonNull Button disease,
      @NonNull Spinner syp1, @NonNull Spinner syp2, @NonNull Spinner syp3, @NonNull Spinner syp4,
      @NonNull Spinner syp5, @NonNull Spinner syp6, @NonNull Spinner syp7,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.disease = disease;
    this.syp1 = syp1;
    this.syp2 = syp2;
    this.syp3 = syp3;
    this.syp4 = syp4;
    this.syp5 = syp5;
    this.syp6 = syp6;
    this.syp7 = syp7;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCheckerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCheckerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_checker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCheckerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.disease;
      Button disease = ViewBindings.findChildViewById(rootView, id);
      if (disease == null) {
        break missingId;
      }

      id = R.id.syp1;
      Spinner syp1 = ViewBindings.findChildViewById(rootView, id);
      if (syp1 == null) {
        break missingId;
      }

      id = R.id.syp2;
      Spinner syp2 = ViewBindings.findChildViewById(rootView, id);
      if (syp2 == null) {
        break missingId;
      }

      id = R.id.syp3;
      Spinner syp3 = ViewBindings.findChildViewById(rootView, id);
      if (syp3 == null) {
        break missingId;
      }

      id = R.id.syp4;
      Spinner syp4 = ViewBindings.findChildViewById(rootView, id);
      if (syp4 == null) {
        break missingId;
      }

      id = R.id.syp5;
      Spinner syp5 = ViewBindings.findChildViewById(rootView, id);
      if (syp5 == null) {
        break missingId;
      }

      id = R.id.syp6;
      Spinner syp6 = ViewBindings.findChildViewById(rootView, id);
      if (syp6 == null) {
        break missingId;
      }

      id = R.id.syp7;
      Spinner syp7 = ViewBindings.findChildViewById(rootView, id);
      if (syp7 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityCheckerBinding((ConstraintLayout) rootView, disease, syp1, syp2, syp3,
          syp4, syp5, syp6, syp7, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
