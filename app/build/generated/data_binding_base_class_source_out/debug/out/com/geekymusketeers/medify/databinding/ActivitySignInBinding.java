// Generated by view binder compiler. Do not edit!
package com.geekymusketeers.medify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.geekymusketeers.medify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText SignInEmail;

  @NonNull
  public final EditText SignInPassword;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView forgotPassword;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView signInSuggestion;

  @NonNull
  public final TextView signUpHeader;

  @NonNull
  public final TextView signUph2;

  @NonNull
  public final TextView toSignUp;

  private ActivitySignInBinding(@NonNull ConstraintLayout rootView, @NonNull EditText SignInEmail,
      @NonNull EditText SignInPassword, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView forgotPassword, @NonNull LinearLayout linearLayout,
      @NonNull Button loginButton, @NonNull TextView signInSuggestion,
      @NonNull TextView signUpHeader, @NonNull TextView signUph2, @NonNull TextView toSignUp) {
    this.rootView = rootView;
    this.SignInEmail = SignInEmail;
    this.SignInPassword = SignInPassword;
    this.constraintLayout = constraintLayout;
    this.forgotPassword = forgotPassword;
    this.linearLayout = linearLayout;
    this.loginButton = loginButton;
    this.signInSuggestion = signInSuggestion;
    this.signUpHeader = signUpHeader;
    this.signUph2 = signUph2;
    this.toSignUp = toSignUp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SignIn_Email;
      EditText SignInEmail = ViewBindings.findChildViewById(rootView, id);
      if (SignInEmail == null) {
        break missingId;
      }

      id = R.id.SignIn_Password;
      EditText SignInPassword = ViewBindings.findChildViewById(rootView, id);
      if (SignInPassword == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.forgotPassword;
      TextView forgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotPassword == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.sign_in_suggestion;
      TextView signInSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (signInSuggestion == null) {
        break missingId;
      }

      id = R.id.signUpHeader;
      TextView signUpHeader = ViewBindings.findChildViewById(rootView, id);
      if (signUpHeader == null) {
        break missingId;
      }

      id = R.id.signUph2;
      TextView signUph2 = ViewBindings.findChildViewById(rootView, id);
      if (signUph2 == null) {
        break missingId;
      }

      id = R.id.toSignUp;
      TextView toSignUp = ViewBindings.findChildViewById(rootView, id);
      if (toSignUp == null) {
        break missingId;
      }

      return new ActivitySignInBinding((ConstraintLayout) rootView, SignInEmail, SignInPassword,
          constraintLayout, forgotPassword, linearLayout, loginButton, signInSuggestion,
          signUpHeader, signUph2, toSignUp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
